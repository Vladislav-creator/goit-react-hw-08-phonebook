{"version":3,"file":"static/js/224.333c84e1.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Section/Section.module.jsx","components/Section/Section.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/components/EditContactForm/EditContactForm.module.css?43d2","components/EditContactForm/EditContactForm.js","components/ModalEditContact/ModalEditContact.module..jsx","components/ModalEditContact/ModalEditContact.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.module.jsx","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;\n\nexport const selectVisibleContacts = createSelector(\n    [ selectContactsList, selectContactsFilter],\n    (contacts, filter) => {\n    return contacts.filter(contact => contact.name.toLowerCase()\n    .includes(filter.toLowerCase()))\n    }\n    )","import styled from '@emotion/styled';\n\nexport const SectionContainer = styled.section`\n  // margin: auto;\n  margin-bottom: 15px;\n  padding: 20px;\n  display: grid;\n  justify-content: center;\n  justify-items: center;\n  gap: 14px;\n  background: rgba(138, 43, 226, 0.8);\n  max-width: 500px;\n  border-radius: 2%;\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n`;","import PropTypes from 'prop-types';\n\nimport { SectionContainer, Title } from './Section.module';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionContainer>\n      <Title>{title}</Title>\n      {children}\n    </SectionContainer>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n}","// extracted by mini-css-extract-plugin\nexport default {\"formstyle\":\"ContactForm_formstyle__JhBri\",\"inputstyle\":\"ContactForm_inputstyle__LkHCz\",\"inputname\":\"ContactForm_inputname__L+sFd\",\"button\":\"ContactForm_button__eSwX9\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContactsList } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\n\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const formName = e.target.elements.name.value;\n    const formNumber = e.target.elements.number.value;\n\n    if (contacts.some(({ name }) => name.toLowerCase() === formName.toLowerCase())) {\n      return alert(`${formName} is already in contacts`);\n    }\n\n    if (contacts.some(({ number }) => number === formNumber)) {\n      return alert(`${formNumber} is already in contacts`);\n    }\n\n    dispatch(addContact({ name: formName, number: formNumber }));\n    form.reset();\n  };\n\n  return (\n    <form className={css.formstyle} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.inputname}>\n        Name\n        <input className={css.inputstyle}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          value={contacts.name}\n        />\n      </label>\n      <label className={css.inputname}>\n        Number\n        <input className={css.inputstyle}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number\"\n          value={contacts.number}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">Add contact</button>\n    </form>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"inputstyle\":\"Filter_inputstyle__i4zpR\",\"inputname\":\"Filter_inputname__nHO5V\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setContactsFilter } from '../../redux/contacts/filtersSlice';\nimport { selectContactsFilter } from '../../redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const userQueryFilter = useSelector(selectContactsFilter);\n  \n  const dispatch = useDispatch();\n  const handleFilterChange = e => {\n    const userQuery = e.target.value;\n    const normalizedValue = userQuery.toLowerCase().trim();\n    dispatch(setContactsFilter(normalizedValue));\n  };\n  return (\n    <div >\n      <label className={css.inputname}>Find contacts by name</label>\n      <input className={css.inputstyle}\n        placeholder=\"Enter name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={userQueryFilter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"formstyle\":\"EditContactForm_formstyle__9XZ9v\",\"inputstyle\":\"EditContactForm_inputstyle__DH66l\",\"inputname\":\"EditContactForm_inputname__kuY0g\",\"button\":\"EditContactForm_button__6oq3H\"};","import { useDispatch, useSelector } from 'react-redux';\nimport {editContact } from '../../redux/contacts/operations';\nimport { selectEditContactData, setEditContactData, setModalStatus } from '../../redux/contacts/modalSlice';\nimport {selectContactsList} from '../../redux/contacts/selectors'\nimport css from './EditContactForm.module.css';\nexport const EditContactForm = () => {\n  const contacts = useSelector(selectContactsList);\n \n  const {name, number, id} = useSelector(selectEditContactData);\n\n  const filteredContactsByName = contacts.filter(contact => contact.name !== name);\n  const filteredContactsByNumber = contacts.filter(contact => contact.number !== number);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const newName = form.elements.name.value;\n    const newNumber = form.elements.number.value;\n\n    if (\n      filteredContactsByName.some(\n        contact => contact.name.toLocaleLowerCase() === newName.toLocaleLowerCase()\n      )\n    ) {\n      alert(`${newName} is already in contacts`);\n    } else if (\n      filteredContactsByNumber.some(contact => contact.number === newNumber)\n    ) {\n        alert(`${newNumber} is already used`);\n      }    \n    else {\n      dispatch(editContact({ id: id, newContactData: {\n        name: newName,\n        number: newNumber,\n      } }));\n      dispatch(setModalStatus(false));\n      dispatch(setEditContactData(null));\n      \n    }\n    form.reset();\n  };\n\n  return (\n    <form className={css.formstyle} onSubmit={handleSubmit} >\n      <label className={css.inputname}  htmlFor={id} >\n        New Name\n      </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        defaultValue={name}\n        className={css.inputstyle}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        id={id}\n        required\n      />\n\n      <label className={css.inputname} htmlFor={id} >\n       New Number\n      </label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        defaultValue={number}\n        className={css.inputstyle}\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        id={id}\n        required\n      />\n\n      <button className={css.button} type=\"submit\" >\n        Edit contact\n      </button>\n    </form>\n  );\n};\n\nexport default EditContactForm;","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\nposition: fixed;\nleft: 0;\nright: 0;\ntop: 0;\nbottom: 0;\n background-color: rgba(0, 0, 0, 0.6);\n\ntransition: opacity 300ms linear, visibility 300ms linear;\nz-index: 1;\n`;\nexport const Modal = styled.div`\nposition: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scaleY(1);\n\n    height: 420px;\n    width: 380px;\n    background: #FFC0CB;\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 2px 1px rgba(0, 0, 0, 0.2);\n    border-radius: 4px;\n    transition: transform 300ms linear;\n    padding: 24px;\n`;\nexport const Text = styled.p`\ncolor: rgb(0, 0, 0);\nfont-size: larger;\nfont-weight: 700;\npadding-bottom: 15px;\npadding-top: 25px;\ntext-align: center;\n`;\nexport const CloseButton = styled.button`\nposition: absolute;\n    top: 24px;\n    right: 24px;\n    cursor: pointer;\n    border-radius: 5px;\n    box-shadow: #ADCFFF 0 -12px 6px inset;\n    :hover,\n    :focus{\n        background: blueviolet;\n        color: white;\n        transform: scale(1.15);\n    };\n`;\n ","import EditContactForm from 'components/EditContactForm/EditContactForm';\nimport { Backdrop, Modal, Text, CloseButton } from './ModalEditContact.module.';\nimport { useDispatch } from 'react-redux';\nimport { setEditContactData, setModalStatus } from '../../redux/contacts/modalSlice';\nimport { useEffect } from 'react';\n\nexport const ModalEditContact = () => {\n  const dispatch = useDispatch();\n \n  const onCloseBtnClick = () => {\n    dispatch(setModalStatus(false));\n    dispatch(setEditContactData(null));\n   \n  }\n\n    const handleOverlayClick = event => {\n        if (event.currentTarget === event.target) {\n            dispatch(setModalStatus(false));\n            dispatch(setEditContactData(null));\n          \n        }\n      };\n    \n      useEffect(() => {\n        const handleKeyDown = event => {\n          if (event.code === 'Escape') {\n            dispatch(setModalStatus(false));\n            dispatch(setEditContactData(null));\n            \n          }\n        };\n    \n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n          window.removeEventListener('keydown', handleKeyDown);\n        };\n      });\n    \n    return <Backdrop  onClick={handleOverlayClick}>\n        <Modal >\n            <Text>You are trying to change the next contact:</Text>\n            <CloseButton onClick={onCloseBtnClick}>&times;</CloseButton>\n            <EditContactForm />\n        </Modal>\n    </Backdrop>\n}\n\nexport default ModalEditContact;","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactListItem_contactListItem__A4sXv\",\"contacts\":\"ContactListItem_contacts__CBDzW\",\"button\":\"ContactListItem_button__SG6H2\"};","import PropTypes from 'prop-types';\nimport { ModalEditContact } from '../ModalEditContact/ModalEditContact'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setEditContactData, setModalStatus, selectModalStatus } from '../../redux/contacts/modalSlice'\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { useEffect } from 'react';\nimport css from './ContactListItem.module.css';\n\nexport const ContactsListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const isModalOpen = useSelector(selectModalStatus);\n  const body = document.body;\n  if(isModalOpen) {\n    body.classList.add('disable-scroll')\n  }else{\n    body.classList.remove('disable-scroll')\n  }\n  const onEditBtnClick = () => {\n    dispatch(setModalStatus(true));\n    dispatch(setEditContactData({ name, number, id }));\n   \n  }\n\n  useEffect(()=>{\n\n  }, [])\n  const handleDeleteContact = userId => {\n    dispatch(deleteContact(userId));\n  };\n\n  return (\n    <div>\n    {isModalOpen && <ModalEditContact />}\n    <li className={css.contactListItem} key={id}>\n    <div className={css.flexWrap}>\n    \n      <p style={{ fontWeight: '500' }}>\n        {name}:\n      </p>\n      \n      <p style={{ fontWeight: '500' }}>{number}</p>\n      \n      </div>\n      <div className={css.flexWrap}>\n        <button className={css.button} onClick={() => handleDeleteContact(id)}>Delete</button>\n      <button className={css.button}\n          type=\"button\"\n          onClick={onEditBtnClick}\n        >\n          Edit\n        </button>\n        </div>\n    </li>\n    </div>\n  );\n};\n\n ContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n   name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n };","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  padding: 0;\n  margin: 0;\n`;","import { useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nimport { ContactsListItem } from '../ContactListItem/ContactListItem';\n\nimport { ContactsList } from './ContactList.module';\n\nexport const ContactList = () => {\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n\nconst sortedContacts =  visibleContacts.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n  \n  return (\n    <ContactsList>\n      {sortedContacts.map(({ name, number, id}) => (\n        <ContactsListItem  key={id} id={id} name={name} number={number} />\n      ))}\n    </ContactsList>\n  );\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectError, selectIsLoading } from '../redux/contacts/selectors';\n\nimport { Section } from '../components/Section/Section';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\n import { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter />\n        {isLoading && !error && <b>Request in progress</b>}\n        <ContactList />\n      </Section>\n    </>\n  );\n};"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","SectionContainer","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Section","_ref","title","children","_jsxs","_jsx","ContactForm","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","form","target","formName","elements","value","formNumber","number","some","alert","concat","_ref2","addContact","reset","autoComplete","type","pattern","required","placeholder","Filter","userQueryFilter","onChange","normalizedValue","trim","setContactsFilter","_useSelector","selectEditContactData","id","filteredContactsByName","filteredContactsByNumber","currentTarget","newName","newNumber","toLocaleLowerCase","editContact","newContactData","setModalStatus","setEditContactData","htmlFor","defaultValue","Backdrop","Modal","Text","_templateObject3","CloseButton","_templateObject4","ModalEditContact","useEffect","handleKeyDown","event","code","window","addEventListener","removeEventListener","onClick","EditContactForm","ContactsListItem","isModalOpen","selectModalStatus","body","document","classList","add","remove","style","fontWeight","userId","deleteContact","ContactsList","ContactList","sortedContacts","sort","a","b","map","ContactsPage","fetchContacts","_Fragment"],"sourceRoot":""}